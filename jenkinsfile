pipeline {
    agent any
    stages {
        stage("Git clone") {
            steps {
                git url: 'https://github.com/inspiringrai/CAR_RENTAL.git', branch: 'main'
            }
        }
        stage("Frontend prerequisite installations") {
            steps{
                dir('Client'){
                    sh 'npm install'
                }
            }
        }

        stage('Maven Build'){
            steps {
                dir('Server'){

                    sh 'mvn clean install'

                }
            }
        }

        stage('Building the images and pushing them to DockerHub'){
            steps {
                dir('Client'){
                    sh 'docker build -t patelparth17/react .'
                    withCredentials([usernamePassword( credentialsId: 'dockerid', usernameVariable: 'patelparth17', passwordVariable: 'P&Nwentupthehi11')]) {
                            def registry_url = "registry.hub.docker.com/"
                            bat "docker login -u $patelparth17 -p $P&Nwentupthehi11 ${registry_url}"
                            docker.withRegistry("http://${registry_url}", "dockerid") {

                                bat "docker push patelparth17/react"
                            }
                        }
                }
                dir('Server'){
                    sh 'docker build -t patelparth17/spring .'
                    withCredentials([usernamePassword( credentialsId: 'dockerid', usernameVariable: 'patelparth17', passwordVariable: 'P&Nwentupthehi11')]) {
                                                def registry_url = "registry.hub.docker.com/"
                                                bat "docker login -u $patelparth17 -p $P&Nwentupthehi11 ${registry_url}"
                                                docker.withRegistry("http://${registry_url}", "dockerid") {

                                                    bat "docker push patelparth17/spring"
                                                }
                                            }
                }
            }
        }

        stage('Ansible Deploy') {
             steps {
                  ansiblePlaybook colorized: true, disableHostKeyChecking: true, installation: 'Ansible', inventory: 'inventory', playbook: 'play.yml'
             }
        }
    }
}